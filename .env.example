# ==========================================
# PolyIngest Alpha Detection Service Config
# ==========================================

# Application Settings
DEBUG=false
LOG_LEVEL=INFO

# ==========================================
# Phase 3 Requirements: API Keys Needed
# ==========================================

# Polymarket API (Optional - for enhanced market data)
# Get from: Contact Polymarket for API access
# Used for: Enhanced market data, real-time price feeds
POLYMARKET_API_KEY=your_polymarket_api_key_here
POLYMARKET_GRAPHQL_URL=https://clob.polymarket.com/graphql
POLYMARKET_REST_URL=https://clob.polymarket.com

# Polygon Blockchain Access (REQUIRED for Phase 3)
# Get from: Alchemy (alchemy.com), Infura (infura.io), or QuickNode (quicknode.com)
# Used for: On-chain portfolio analysis, transaction history, wallet monitoring
# Example Alchemy URL: https://polygon-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# Example Infura URL: https://polygon-mainnet.infura.io/v3/YOUR_PROJECT_ID
POLYGON_RPC_URL=https://polygon-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY
POLYGON_ARCHIVE_URL=https://polygon-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Polygonscan API (REQUIRED for Phase 3)
# Get from: polygonscan.com/apis (free registration)
# Used for: Transaction history, token transfers, contract interactions
# Free tier: 5 calls/second, 100,000 calls/day
ETHERSCAN_API_KEY=your_polygonscan_api_key_here

# ==========================================
# Storage & Caching (REQUIRED)
# ==========================================

# Redis (for caching market data and trader analysis)
# Install: brew install redis (macOS) or apt install redis (Ubuntu)
# Start: redis-server
REDIS_URL=redis://localhost:6379/0

# PostgreSQL (for historical data storage)
# Install: brew install postgresql (macOS) or apt install postgresql (Ubuntu)
# Setup: createdb polyingest
DATABASE_URL=postgresql://user:password@localhost:5432/polyingest

# ==========================================
# Agent Configuration
# ==========================================

# Voting threshold for alpha consensus (0.0-1.0)
AGENT_VOTE_THRESHOLD=0.6

# Minimum portfolio allocation to flag as high-conviction (0.0-1.0)
MIN_PORTFOLIO_RATIO=0.1

# Minimum success rate to consider trader as high-performing (0.0-1.0)
MIN_SUCCESS_RATE=0.7

# Minimum trade history required for statistical significance
MIN_TRADE_HISTORY=10

# ==========================================
# Performance & Rate Limiting
# ==========================================

# API rate limiting
RATE_LIMIT_PER_MINUTE=100

# Cache TTL for market data (seconds)
CACHE_TTL_SECONDS=300

# Maximum concurrent requests to external APIs
MAX_CONCURRENT_REQUESTS=50